{"version":3,"sources":["images/green.png","components/square.js","components/board.js","components/form.js","components/scorePanel.js","containers/App.js","index.js","images/red.png"],"names":["module","exports","Square","green","red","className","classNames","alt","src","imageGreen","imageRed","Board","height","width","squares","handleKeyDown","style","heigh","tabIndex","onKeyDown","e","map","square","index","key","Form","handleSubmit","handleChange","onSubmit","type","id","min","max","value","onChange","ScorePanel","movesCount","reset","onClick","App","initialState","gameStarted","gameFinished","redSquarePosition","greenSquaresCount","state","this","setState","target","parseInt","preventDefault","generateMatrix","Array","fill","Math","ceil","sqrt","floor","i","random","keysMap","37","label","isValidMove","getNewPosition","38","39","40","keyCode","newPosition","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mC,wPCY5BC,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACb,yBAAKC,UAAWC,IAAW,SAAU,CAAEH,SAAS,CAAEC,SAC/CD,GAAS,yBAAKI,IAAI,QAAQC,IAAKC,MAC/BL,GAAO,yBAAKG,IAAI,MAAMC,IAAKE,QCUjBC,EAfD,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACvC,OACE,yBACEV,UAAU,QACVW,MAAO,CAAEH,MAAM,GAAD,OAAa,GAARA,EAAL,MAAqBI,MAAM,GAAD,OAAc,GAATL,EAAL,OACxCM,SAAS,IACTC,UAAW,SAACC,GAAD,OAAOL,EAAcK,KAE/BN,EAAQO,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAOpB,MAAkB,IAAXmB,EAAclB,IAAgB,IAAXkB,SCiBvCG,EA5BF,SAAC,GAAD,IAAGb,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOa,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,aAAhC,OACX,0BAAMtB,UAAU,OAAOuB,SAAUF,GAC/B,yBAAKrB,UAAU,cACb,2CACA,2BACEwB,KAAK,SACLC,GAAG,SACHC,IAAI,IACJC,IAAI,MACJC,MAAOrB,EACPsB,SAAUP,KAGd,yBAAKtB,UAAU,cACb,0CACA,2BACEwB,KAAK,SACLC,GAAG,QACHC,IAAI,IACJC,IAAI,MACJC,MAAOpB,EACPqB,SAAUP,KAGd,2BAAOE,KAAK,SAASI,MAAM,sBCVhBE,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAf,OACjB,yBAAKhC,UAAU,eACb,2CAGE,8DAC+B+B,GAE/B,4BAAQE,QAASD,GAAjB,sBCyISE,E,YA7Ib,aAAe,IAAD,8BACZ,+CACKC,aAAe,CAClB5B,OAAQ,GACRC,MAAO,GACP4B,aAAa,EACbC,cAAc,EACd5B,QAAS,GACT6B,mBAAoB,EACpBP,WAAY,EACZQ,kBAAmB,GAErB,EAAKC,MAAL,eAAkB,EAAKL,cAZX,E,qEAeZM,KAAKC,SAASD,KAAKN,gB,mCAERpB,GACX0B,KAAKC,SAAL,eACG3B,EAAE4B,OAAOlB,GAAKmB,SAAS7B,EAAE4B,OAAOf,W,mCAGxBb,GACXA,EAAE8B,iBACFJ,KAAKK,iBACLL,KAAKC,SAAS,CACZN,aAAa,M,uCAGC,IAAD,EACSK,KAAKD,MAAvBjC,EADS,EACTA,OAAQC,EADC,EACDA,MACVC,EAAU,IAAIsC,MAAMxC,EAASC,GAAOwC,KAAK,GACzCT,EAAoBU,KAAKC,KAAKD,KAAKE,KAAK5C,EAASC,IACjD8B,EAAoBW,KAAKG,MAAO7C,EAASC,EAAS,EAAIA,EAAQ,GAClEC,EAAQ6B,GAAqB,EAE7B,IAAK,IAAIe,EAAI,EAAGA,EAAId,EAAmBc,IAAK,CAC1C,IAAIC,EAASL,KAAKG,MAAMH,KAAKK,SAAW/C,EAASC,GAC7C8C,IAAWhB,GAAyC,IAApB7B,EAAQ6C,GAI5C7C,EAAQ6C,GAAU,EAHhBD,IAKJZ,KAAKC,SAAS,CACZjC,UACA6B,oBACAC,wB,oCAGUxB,GAAI,IAAD,EASX0B,KAAKD,MAPP/B,EAFa,EAEbA,QACA6B,EAHa,EAGbA,kBACA9B,EAJa,EAIbA,MACAD,EALa,EAKbA,OACAwB,EANa,EAMbA,WACAQ,EAPa,EAObA,kBACAF,EARa,EAQbA,aAEEkB,EAAU,CACZC,GAAI,CACFC,MAAO,OACPC,YAAa,WACX,IAAIf,EAASL,EAAoB,EACjC,OAAOK,GAAU,GAAKA,EAASnC,EAAQ8B,EAAoB9B,GAE7DmD,eAAgB,kBAAMrB,EAAoB,IAE5CsB,GAAI,CACFH,MAAO,KACPC,YAAa,WAEX,OADapB,EAAoB9B,GAChB,GAEnBmD,eAAgB,kBAAMrB,EAAoB9B,IAE5CqD,GAAI,CACFJ,MAAO,QACPC,YAAa,WACX,IAAIf,EAASL,EAAoB,EACjC,OACEK,EAASpC,EAASC,GAClBmC,EAASnC,EAAQ8B,EAAoB9B,GAGzCmD,eAAgB,kBAAMrB,EAAoB,IAE5CwB,GAAI,CACFL,MAAO,OACPC,YAAa,WAEX,OAAOlD,EAAQD,EADF+B,EAAoB9B,GAGnCmD,eAAgB,kBAAMrB,EAAoB9B,KAG9C,GAAK+C,EAAQxC,EAAEgD,UAAaR,EAAQxC,EAAEgD,SAASL,cAA/C,CAIA3B,IACAtB,EAAO,YAAOA,GACd,IAAIuD,EAAcT,EAAQxC,EAAEgD,SAASJ,iBACR,IAAzBlD,EAAQuD,IAEgB,MAD1BzB,IAEEF,GAAe,GAGnB5B,EAAQ6B,GAAqB,EAC7B7B,EAAQuD,GAAe,EAEvBvB,KAAKC,SAAS,CACZjC,UACA6B,kBAAmB0B,EACnBjC,aACAQ,oBACAF,oB,+BAGM,IAAD,SAC6BI,KAAKD,MAAnCJ,EADC,EACDA,YAAaC,EADZ,EACYA,aACnB,OAAKD,EASEC,EAIO,kBAAC,EAAD,eAAYL,MAAO,kBAAM,EAAKA,UAAaS,KAAKD,QAFxD,kBAAC,EAAD,iBAAWC,KAAKD,MAAhB,CAAuB9B,cAAe,SAACK,GAAD,OAAO,EAAKL,cAAcK,OATlE,kBAAC,EAAD,iBACM0B,KAAKD,MADX,CAEElB,aAAc,SAACP,GAAD,OAAO,EAAKO,aAAaP,IACvCM,aAAc,SAACN,GAAD,OAAO,EAAKM,aAAaN,W,GAjI/BkD,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjD3E,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.9a7b165b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green.4f4f912d.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport imageRed from '../images/red.png';\nimport imageGreen from '../images/green.png';\n\nconst Square = ({ green, red }) => (\n  <div className={classNames('square', { green }, { red })}>\n    {green && <img alt='green' src={imageGreen} />}\n    {red && <img alt='red' src={imageRed} />}\n  </div>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './square';\n\nconst Board = ({ height, width, squares, handleKeyDown }) => {\n  return (\n    <div\n      className='board'\n      style={{ width: `${width * 50}px`, heigh: `${height * 50}px` }}\n      tabIndex='0'\n      onKeyDown={(e) => handleKeyDown(e)}\n    >\n      {squares.map((square, index) => (\n        <Square key={index} green={square === 1} red={square === 2} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nconst Form = ({ height, width, handleSubmit, handleChange }) => (\n  <form className='form' onSubmit={handleSubmit}>\n    <div className='from-group'>\n      <label>Height :</label>\n      <input\n        type='number'\n        id='height'\n        min='2'\n        max='100'\n        value={height}\n        onChange={handleChange}\n      />\n    </div>\n    <div className='from-group'>\n      <label>Width :</label>\n      <input\n        type='number'\n        id='width'\n        min='2'\n        max='100'\n        value={width}\n        onChange={handleChange}\n      />\n    </div>\n    <input type='submit' value='Start the game!' />\n  </form>\n);\n\nexport default Form;\n","import React from 'react';\n\nconst ScorePanel = ({ movesCount, reset }) => (\n  <div className='score-panel'>\n    <div>\n      Game over.\n      </div>\n      <div>\n      Total moves to save princess: {movesCount}\n      </div>\n      <button onClick={reset}>Restart the game</button>\n  \n  </div>\n);\n\nexport default ScorePanel;\n","import React from 'react';\nimport Board from '../components/board';\nimport Form from '../components/form';\nimport ScorePanel from '../components/scorePanel';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.initialState = {\n      height: 10,\n      width: 10,\n      gameStarted: false,\n      gameFinished: false,\n      squares: [],\n      redSquarePosition: -1,\n      movesCount: 0,\n      greenSquaresCount: 0,\n    };\n    this.state = { ...this.initialState };\n  }\n  reset() {\n    this.setState(this.initialState);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: parseInt(e.target.value),\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    this.generateMatrix();\n    this.setState({\n      gameStarted: true,\n    });\n  }\n  generateMatrix() {\n    let { height, width } = this.state;\n    let squares = new Array(height * width).fill(0);\n    let greenSquaresCount = Math.ceil(Math.sqrt(height * width));\n    let redSquarePosition = Math.floor((height * width) / 2 + width / 2);\n    squares[redSquarePosition] = 2;\n\n    for (let i = 0; i < greenSquaresCount; i++) {\n      let random = Math.floor(Math.random() * height * width);\n      if (random === redSquarePosition || squares[random] === 1) {\n        i--;\n        continue;\n      }\n      squares[random] = 1;\n    }\n    this.setState({\n      squares,\n      redSquarePosition,\n      greenSquaresCount,\n    });\n  }\n  handleKeyDown(e) {\n    let {\n      squares,\n      redSquarePosition,\n      width,\n      height,\n      movesCount,\n      greenSquaresCount,\n      gameFinished,\n    } = this.state;\n    let keysMap = {\n      37: {\n        label: 'LEFT',\n        isValidMove: () => {\n          let target = redSquarePosition - 1;\n          return target >= 0 && target % width < redSquarePosition % width;\n        },\n        getNewPosition: () => redSquarePosition - 1,\n      },\n      38: {\n        label: 'UP',\n        isValidMove: () => {\n          let target = redSquarePosition - width;\n          return target >= 0;\n        },\n        getNewPosition: () => redSquarePosition - width,\n      },\n      39: {\n        label: 'RIGHT',\n        isValidMove: () => {\n          let target = redSquarePosition + 1;\n          return (\n            target < height * width &&\n            target % width > redSquarePosition % width\n          );\n        },\n        getNewPosition: () => redSquarePosition + 1,\n      },\n      40: {\n        label: 'DOWN',\n        isValidMove: () => {\n          let target = redSquarePosition + width;\n          return width * height > target;\n        },\n        getNewPosition: () => redSquarePosition + width,\n      },\n    };\n    if (!keysMap[e.keyCode] || !keysMap[e.keyCode].isValidMove()) {\n      return;\n    }\n\n    movesCount++;\n    squares = [...squares];\n    let newPosition = keysMap[e.keyCode].getNewPosition();\n    if (squares[newPosition] === 1) {\n      greenSquaresCount--;\n      if (greenSquaresCount === 0) {\n        gameFinished = true;\n      }\n    }\n    squares[redSquarePosition] = 0;\n    squares[newPosition] = 2;\n\n    this.setState({\n      squares,\n      redSquarePosition: newPosition,\n      movesCount,\n      greenSquaresCount,\n      gameFinished,\n    });\n  }\n  render() {\n    let { gameStarted, gameFinished } = this.state;\n    if (!gameStarted) {\n      return (\n        <Form\n          {...this.state}\n          handleChange={(e) => this.handleChange(e)}\n          handleSubmit={(e) => this.handleSubmit(e)}\n        />\n      );\n    } else {\n      if (!gameFinished)\n        return (\n          <Board {...this.state} handleKeyDown={(e) => this.handleKeyDown(e)} />\n        );\n      else return <ScorePanel reset={() => this.reset()} {...this.state} />;\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.scss';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/red.4ddb8934.png\";"],"sourceRoot":""}